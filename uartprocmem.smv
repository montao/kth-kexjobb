MODULE proc
VAR
-- system outputs
	Bit11 : boolean; -- Boolean variable
	Bit12 : boolean;
	K1 : boolean;
ASSIGN
	init (Bit11) := FALSE;
	init (Bit12) := FALSE;
	
MODULE main

-- ACTIVITIES
-- 1. Fill in the smv definitions below (see To Do)
-- 2. Then run this file with NuSMV -bmc and make sure you understand 
-- the output you see.
VAR
-- system outputs
	Bit1 : boolean; -- Boolean variable
	Bit2 : boolean;
	K : boolean;
	state : {s1, s2, s3, s4}; -- scalar variable
IVAR
-- system inputs
	input : boolean;
ASSIGN
	init (state) := s1;
	init (Bit1) := FALSE;
	init (Bit2) := FALSE;
	next (state) :=
		case
			state = s1 & input = TRUE : s2;
			state = s2 & input = FALSE : s3;
			state = s2 & input = TRUE : s4;
			state = s3 & input = FALSE : s1;
			state = s3 & input = TRUE : s2;
			state = s4 & input = FALSE : s3;
			TRUE : state; -- why?
		esac;
	next (Bit1) :=
		case
		-- To Do 
			state = s1 : TRUE;
			TRUE : FALSE;
		esac;
	next (Bit2) :=
		case
		-- To Do 
			state = s1 : TRUE;
			TRUE : FALSE;
		esac;

LTLSPEC G (Bit1 <-> (X Bit2))
-- the value of Bit1 now always equals the 
-- value of Bit2 in the next time step
-- This is obviously TRUE!
LTLSPEC G (Bit1 <-> (X Bit1))
-- the value of Bit1 now always equals the 
-- value of Bit1 in the next time step
-- This is obviously FALSE!
LTLSPEC G (! Bit2 <-> K) -> G Bit1 <-> (X Bit1)