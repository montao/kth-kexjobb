
MODULE data
VAR
	data : 0 .. 255;
MODULE uart
-- ACTIVITIES
-- 1. Fill in the smv definitions
-- 2. Then run this file in interactive mode to see the states
--$ NuSMV -int
--NuSMV > read_model -i uart.smv
--NuSMV > flatten_hierarchy
--NuSMV > encode_variables
--NuSMV > build_model
--NuSMV > pick_state -i
-- NuSMV > simulate -i -k 15
-- oneliner reset; read_model -i uart.smv; go; pick_state -iv ; simulate -iv -k 15
VAR
	Tx : data;
	Rx : data;
	output : data;
	input : data;
ASSIGN
	init (Tx.data) := 0;
	init (Rx.data) := 0;
MODULE proc (uart, mem)
VAR
	output : data;
	input : data;
MODULE mem
VAR
	k : data;
ASSIGN
	init (k.data) := 22; --whatever should stay the same
	next (k.data) :=
		case
			TRUE : k.data;
		esac;
MODULE write (data)
ASSIGN
	data := 0;
MODULE x (data)
ASSIGN
	data := data;
MODULE main
VAR
	uart_var : uart;
	mem_var : mem;
	proc_var : proc (uart_var, mem_var);
	write_var : write;
	data : write(mem_var);
	SPEC AG (proc_var.out != data);
--mem_var.k)	
	 
	--->    AG     ( mem_var.k  =  ( x(mem_var.k)   )     )