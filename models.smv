
MODULE UART (proc)
VAR
	state : {idle, receive, transmit};
	Rx : unsigned word[8];--vector of bytes
	Tx : unsigned word[8];

MODULE MEM (proc)
VAR
-- main memory data
	K : unsigned word[8]; 
	data : array 0..7 of array 0..7 of unsigned word[8];
ASSIGN
	init (data[1][0]) := K;
	
MODULE main
VAR
-- system state	
	proc : {idle, read, write};
	memory : MEM (proc);
	uart0 : UART (proc);
ASSIGN
	init (proc) := read;
	next (proc) :=
		case
			TRUE : proc;
		esac;
LTLSPEC G (proc != write) -> memory.K = next(memory.K)
	