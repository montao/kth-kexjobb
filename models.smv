MODULE UART
VAR
	state : {idle, receive, transmit};
	Rx : 0 .. 31;
	Tx : 0 .. 31;
--IVAR
-- system inputs

MODULE MEM(proc)
VAR
-- main memory data
	K : 0 .. 31;
	old-K : 0 .. 31;
ASSIGN
	init (K) := 22;
	init (old-K) := 22;
	next (K) :=
		case
			proc = write-K : 00; --this should never occur
			TRUE : K;
		esac;
	next (old-K) :=
		case			
			TRUE : K;
		esac;
MODULE main
VAR
-- system state	
	proc : {idle, read, write, write-K};
	memory : MEM(proc);
ASSIGN
	init (proc) := read;
	next (proc) :=
		case
			proc = read : idle;
			TRUE : proc;
		esac;
LTLSPEC G (proc != write-K) -> G (memory.K = memory.old-K)
